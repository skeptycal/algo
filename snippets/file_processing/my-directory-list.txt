The file in_place.py contains:

The file file_lines.py contains:
#!/usr/bin/env python3
# -*- encoding: utf-8 -*-
""" file_lines.py - calculate the number of lines in a file """
import fileinput
import sys
from pathlib import Path
from typing import List

# for line in fileinput.input(sys.argv[1:]):
#     mp3filename = line.strip()

def file_len(file_name, encoding='utf8'):
    with open(file_name, encoding=encoding) as f:
        i = -1
        for i, line in enumerate(f):
            pass
    return i + 1

p = Path()
path = p.resolve()  # similar to os.path.abspath()
print(sum(file_len(f) for f in path.glob('*.py')))


# print(file_len('file_lines.py', 'utf8'))


"""
References:

original: https://towardsdatascience.com/bite-sized-python-recipes-52cde45f1489

Calculate the Total Number of Lines in a File:

def file_len(file_name, encoding='utf8'):
    with open(file_name, encoding=encoding) as f:
        i = -1
        for i, line in enumerate(f):
            pass
    return i + 1

Example: How many lines of codes are there in the python files of your current directory?

>>> from pathlib import Path
>>> p = Path()
>>> path = p.resolve()  # similar to os.path.abspath()
>>> print(sum(file_len(f) for f in path.glob('*.py')))
745
"""

The file py_code.py contains:
#!/usr/bin/env python3
# -*- encoding: utf-8 -*-
""" file_lines.py - print the number of lines
        of python code in a directory. """
# import fileinput
import sys
from pathlib import Path
from typing import List

def file_len(file_name, encoding='utf8'):
    with open(file_name, encoding=encoding) as f:
        i = -1
        for i, line in enumerate(f):
            pass
    return i + 1

p = Path()
path = p.resolve()  # similar to os.path.abspath()
print(sum(file_len(f) for f in path.glob('*.py')))


"""
References:

original: https://towardsdatascience.com/bite-sized-python-recipes-52cde45f1489

"""

The file sample_data.m3u contains:
# sample_data.m3u
# This is a sample m3u file
episode-one.mp3
episode-two.mp3

The file walk_dir.py contains:
import os
import sys

walk_dir = sys.argv[1]

print('walk_dir = ' + walk_dir)

# If your current working directory may change during script execution, it's recommended to
# immediately convert program arguments to an absolute path. Then the variable root below will
# be an absolute path as well. Example:
# walk_dir = os.path.abspath(walk_dir)
print('walk_dir (absolute) = ' + os.path.abspath(walk_dir))

for root, subdirs, files in os.walk(walk_dir):
    print('--\nroot = ' + root)
    list_file_path = os.path.join(root, 'my-directory-list.txt')
    print('list_file_path = ' + list_file_path)

    with open(list_file_path, 'wb') as list_file:
        for subdir in subdirs:
            print('\t- subdirectory ' + subdir)

        for filename in files:
            file_path = os.path.join(root, filename)

            print('\t- file %s (full path: %s)' % (filename, file_path))

            with open(file_path, 'rb') as f:
                f_content = f.read()
                list_file.write(('The file %s contains:\n' % filename).encode('utf-8'))
                list_file.write(f_content)
                list_file.write(b'\n')
